<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<title>Untitled 1</title>
</head>

<body>

<h1>Running Job in Java</h1>
<h2>Simple Threads </h2>
<p>@Async</p>
<p>Note: Creating a local instance of the GitHubLookupService class does NOT 
allow the findUser method to run asynchronously. It must be created inside a 
@Configuration class or picked up by @ComponentScan. </p>
<h2>Spring Batch</h2>
<a href="https://spring.io/projects/spring-batch">https://spring.io/projects/spring-batch</a><br />
A lightweight, comprehensive batch framework designed to enable the development 
of robust batch applications vital for the daily operations of enterprise 
systems. Spring Batch provides reusable functions that are essential in 
processing large volumes of records, including logging/tracing, transaction 
management, job processing statistics, job restart, skip, and resource 
management. It also provides more advanced technical services and features that 
will enable extremely high-volume and high performance batch jobs through 
optimization and partitioning techniques. Simple as well as complex, high-volume 
batch jobs can leverage the framework in a highly scalable manner to process 
significant volumes of information.&nbsp;
<h2>Quartz Scheduler </h2>
<p><a href="https://www.quartz-scheduler.org/">https://www.quartz-scheduler.org/</a>
</p>
<p>Quartz is a richly featured, open source job scheduling library that can be 
integrated within virtually any Java application - from the smallest stand-alone 
application to the largest e-commerce system. Quartz can be used to create 
simple or complex schedules for executing tens, hundreds, or even 
tens-of-thousands of jobs; jobs whose tasks are defined as standard Java 
components that may execute virtually anything you may program them to do. The 
Quartz Scheduler includes many enterprise-class features, such as support for 
JTA transactions and clustering. </p>
<h2>DB Scheduler</h2>
<p>&nbsp;Another good alternative to Quartz is db-scheduler. The library was 
originally designed to be a simpler alternative to Quartz. This design reduces 
the number of required tables to one (compared to Quartz’s 11 tables!) and 
provides a much simpler API. </p>
<h2>JobRunr</h2>
<p><a href="https://www.jobrunr.io/">https://www.jobrunr.io/</a> </p>
<p>Comparison with others </p>
<p>
<a href="https://www.jobrunr.io/en/blog/2024-10-31-task-schedulers-java-modern-alternatives-to-quartz/">
https://www.jobrunr.io/en/blog/2024-10-31-task-schedulers-java-modern-alternatives-to-quartz/</a>&nbsp; 
Task schedulers in Java: modern alternatives to Quartz Scheduler </p>
<p>
<a href="https://www.jobrunr.io/en/blog/2023-02-20-moving-from-quartz-scheduler-to-jobrunr/">
https://www.jobrunr.io/en/blog/2023-02-20-moving-from-quartz-scheduler-to-jobrunr/</a>&nbsp; 
How to move from Quartz to JobRunr </p>
<h3>Tips</h3>
<p>Important: the jobrunr-spring-boot-starter is deprecated since JobRunr v6, 
please use jobrunr-spring-boot-2-starter or jobrunr-spring-boot-3-starter 
instead! </p>
<h3>References </h3>
<p><a href="https://www.baeldung.com/java-jobrunr-spring">https://www.baeldung.com/java-jobrunr-spring</a> 
Background Jobs in Spring with JobRunr </p>

</body>

</html>
