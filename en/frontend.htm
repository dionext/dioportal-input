<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta content="en-us" http-equiv="Content-Language" />
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<title>Untitled 1</title>
</head>

<body>

<h1>Frontend</h1>
<h2>React</h2>
<p>See: <a href="frontend-react.htm">React</a></p>
<h2>Next.js</h2>
<p><a href="https://en.wikipedia.org/wiki/Next.js">https://en.wikipedia.org/wiki/Next.js</a>
</p>
<p>Next.js is an open-source web development framework created by the private 
company Vercel providing React-based web applications with server-side rendering 
and static rendering. React documentation mentions Next.js among "Recommended 
Toolchains" advising it to developers when "building a server-rendered website 
with Node.js".[6] Where traditional React apps can only render their content in 
the client-side browser, Next.js extends this functionality to include 
applications rendered on the server-side. </p>
<p><a href="https://nextjs.org/">https://nextjs.org/</a> </p>
<p><a href="https://www.youtube.com/watch?v=EbIps-suESk">https://www.youtube.com/watch?v=EbIps-suESk</a> 
Spring boot + nextjs starter kit | Auth, Oauth2, Emails, S3 and more. Step by 
step guide </p>
<p>есть мнение , что Next.js слишком зарекламрован,&nbsp; переусложнен, особенно 
для статичных сайтов - альтернатива Astro — статический генератор сайтов, 
ориентированный на производительность.
<a href="https://habr.com/ru/articles/746380/">https://habr.com/ru/articles/746380/</a></p>
<h2>Astro</h2>
<p><a href="https://astro.build/">https://astro.build/</a> </p>
<p>Astro is the web framework for building content-driven websites like blogs, 
marketing, and e-commerce. Astro is best-known for pioneering a new frontend 
architecture to reduce JavaScript overhead and complexity compared to other 
frameworks. If you need a website that loads fast and has great SEO, then Astro 
is for you. </p>
<p><a href="https://habr.com/ru/articles/746380/">https://habr.com/ru/articles/746380/</a> </p>
<h2>Vue</h2>
<p><a href="https://en.wikipedia.org/wiki/Vue.js">https://en.wikipedia.org/wiki/Vue.js</a> 
Vue.js (commonly referred to as Vue; pronounced "view"[6]) is an open-source 
model–view–viewmodel front end JavaScript framework for building user interfaces 
and single-page applications.[12] It was created by Evan You and is maintained 
by him and the rest of the active core team members.[13] </p>
<p>Nuxt.js&nbsp; </p>
<p>Nuxt is a free and open source JavaScript library based on Vue.js, Nitro, and 
Vite. Nuxt is inspired by Next.js,[4] which is a framework of similar purpose, 
based on React.js. The framework is advertised as a "Meta-framework for 
universal applications". The term universal is used here with the meaning that 
the goal of the framework is to enable users to create web views in JavaScript 
utilizing the Vue.js single file component system and that can function both as 
in-browser single page application (SPA) views as well as server-rendered web 
views which are then (after server rendering) "rehydrated" to full SPA 
functionality.[5][6] Additionally, the framework enables users to have the 
content, or parts of it, fully pre-rendered on the server and served in the 
manner of static site generators. The benefits of this approach are, among 
others, reduced time to interactivity and improved SEO compared to SPAs, due to 
the fact that full contents of each page are being served by the web server 
before any client-side JavaScript is executed. Put alternatively, one can 
maintain both the benefits of traditional server-side rendered HTML pages, and 
improved interactivity and advanced user interface of SPAs. The core benefit of 
the Nuxt framework itself is that it makes the configuration and setup of such 
applications simplified and seamless to the application developer, who can 
simply develop UI portions of the application as if it were a more common Vue.js 
single file application. </p>
<h2>Vaadin</h2>
<p><a href="https://en.wikipedia.org/wiki/Vaadin">https://en.wikipedia.org/wiki/Vaadin</a> 
</p>
<p>Vaadin (Finnish pronunciation: [ˈʋɑːdin]) is an open-source web application 
development platform for Java. Vaadin includes a set of Web Components, a Java 
web framework, and a set of tools that enable developers to implement modern web 
graphical user interfaces (GUI) using the Java programming language only 
(instead of HTML and JavaScript), TypeScript only, or a combination of both. 
</p>
<p>
<a href="https://vaadin.com/blog/comparing-frontend-frameworks-for-spring-boot-react-angular-and-vaadin-jhipster">
https://vaadin.com/blog/comparing-frontend-frameworks-for-spring-boot-react-angular-and-vaadin-jhipster</a> 
The best frontend frameworks to use with Spring Boot in 2024 (Compare 4 popular 
frontends for Spring Boot) </p>
<ul>
	<li><span><a href="https://vaadin.com/flow" rel="noopener" router-link="">
	Vaadin Flow</a>&nbsp;- Build web apps 100% in Java without writing any HTML or 
	JavaScript using Vaadin Flow.&nbsp;</span></li>
	<li><span><a href="https://vaadin.com/hilla" rel="noopener" router-link="">
	Hilla</a>&nbsp;- Hilla (<a href="https://vaadin.com/blog/renaming-fusion" rel="noopener" router-link="">previously 
	Vaadin Fusion</a>) is the modern web framework for Java. It Integrates a 
	Spring Boot Java backend with a reactive TypeScript frontend.</span></li>
</ul>
<h2>JHipster</h2>
<p><a href="https://en.wikipedia.org/wiki/JHipster">https://en.wikipedia.org/wiki/JHipster</a> 
JHipster is a free and open-source application generator used to quickly develop 
modern web applications and Microservices using Angular or React (JavaScript 
library) and the Spring Framework. JHipster provides tools to generate a project 
with a Java stack on the server side (using Spring Boot) and a responsive Web 
front-end on the client side (with Angular/React and Bootstrap). It can also 
create microservice stack with support for Netflix OSS, Docker and Kubernetes. 
</p>
<div>
	<p id="Technology_stack">Technology stack</p>
</div>
<p>On the client side:</p>
<ul>
	<li>
	<a href="https://en.wikipedia.org/wiki/HTML5_Boilerplate" title="HTML5 Boilerplate">
	HTML5 Boilerplate</a></li>
	<li>
	<a href="https://en.wikipedia.org/wiki/Bootstrap_(front-end_framework)" title="Bootstrap (front-end framework)">
	Twitter Bootstrap</a></li>
	<li><a href="https://en.wikipedia.org/wiki/AngularJS" title="AngularJS">
	AngularJS</a></li>
	<li>
	<a href="https://en.wikipedia.org/wiki/Angular_(application_platform)" title="Angular (application platform)">
	Angular</a><span>&nbsp;</span>2+</li>
	<li>
	<a href="https://en.wikipedia.org/wiki/React_(JavaScript_library)" title="React (JavaScript library)">
	React</a></li>
	<li>Full internationalization support with Angular Translate</li>
	<li>Optional Compass / Sass support for CSS design</li>
	<li>Optional WebSocket support with Spring Websocket</li>
</ul>
<p>On the server side:</p>
<ul>
	<li>Spring Boot</li>
	<li>Spring Security (including Social Logins)</li>
	<li>Spring MVC REST + Jackson</li>
	<li>Monitoring with Metrics</li>
	<li>Optional WebSocket support with Spring Websocket</li>
	<li>Spring Data JPA + Bean Validation</li>
	<li>Database updates with Liquibase</li>
	<li>
	<a href="https://en.wikipedia.org/wiki/Elasticsearch" title="Elasticsearch">
	Elasticsearch</a><span>&nbsp;</span>support</li>
	<li><a href="https://en.wikipedia.org/wiki/MongoDB" title="MongoDB">MongoDB</a><span>&nbsp;</span>support</li>
	<li>
	<a href="https://en.wikipedia.org/wiki/Apache_Cassandra" title="Apache Cassandra">
	Cassandra</a><span>&nbsp;</span>support</li>
	<li><a href="https://en.wikipedia.org/wiki/Neo4j" title="Neo4j">Neo4j</a><span>&nbsp;</span>support</li>
</ul>
<p>Out-of-the-box auto-configured tooling:</p>
<ul>
	<li>Yeoman</li>
	<li>Webpack or Gulp.js</li>
	<li>BrowserSync</li>
	<li>Maven or Gradle</li>
	<li>Editor for Datamodeling (visual and textual)</li>
</ul>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>JHipster is a project generator for Spring Boot web projects. It is a guided 
walk-through for selecting a backend and frontend, and deciding which libraries 
and configurations you want to use; and then JHipster will generate those into 
your project. It automates the decision process and generates all the required 
boilerplate and setup code. However, JHipster is not a full-stack framework and 
you are still the one who needs to maintain everything going forward. </p>
<p><a href="https://www.jhipster.tech/">https://www.jhipster.tech/</a> JHipster 
is a development platform to quickly generate, develop, and deploy modern web 
applications &amp; microservice architectures. </p>
<p><a href="https://www.youtube.com/watch?v=IfyjKCt6YHE">https://www.youtube.com/watch?v=IfyjKCt6YHE</a>
<a href="https://github.com/mraible/jhipster8-demo">https://github.com/mraible/jhipster8-demo</a> 
Get Started with JHipster 8 (official)</p>
<p>Critics
<a href="https://jpoint.ru/archive/2024/talks/1a8201bdc17b4a40b586fb61aea5710e/">
https://jpoint.ru/archive/2024/talks/1a8201bdc17b4a40b586fb61aea5710e/</a> 
JHipster: думали, распаковка, оказалось — вскрытие </p>
<h2>Express.js </h2>
<p><a href="https://en.wikipedia.org/wiki/Express.js">https://en.wikipedia.org/wiki/Express.js</a> 
Express.js, or simply Express, is a back end web application framework for 
building RESTful APIs with Node.js, released as free and open-source software 
under the MIT License. It is designed for building web applications and APIs.[2] 
It has been called the de facto standard server framework for Node.js.[3] </p>
<p>See <a href="https://www.youtube.com/watch?v=ocMOZpuAMw4">https://www.youtube.com/watch?v=ocMOZpuAMw4</a> 
Cursor Tutorial for Beginners (AI Code Editor) </p>
<h2>HTMX</h2>
<p><a href="https://htmx.org/">https://htmx.org/</a> htmx gives you access to 
AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using 
attributes, so you can build modern user interfaces with the simplicity and 
power of hypertext htmx is small (~14k min.gz’d), dependency-free, extendable &amp; 
has reduced code base sizes by 67% when compared with react </p>
<p><a href="https://www.youtube.com/watch?v=cjL0n1NApRA">https://www.youtube.com/watch?v=cjL0n1NApRA</a> 
Getting started with HTMX in Spring Boot with Thymeleaf&nbsp;
<a href="https://github.com/danvega/hello-htmx">https://github.com/danvega/hello-htmx</a> </p>
<p><a href="https://www.youtube.com/watch?v=kFksiDRZ824">https://www.youtube.com/watch?v=kFksiDRZ824</a> 
Building a Dynamic Task Manager with Spring Boot, JTE, and HTMX
<a href="https://github.com/danvega/jte-tasks">https://github.com/danvega/jte-tasks</a> </p>
<h2>Approaches </h2>
<h3>LocalFirst </h3>
<p><a href="https://www.inkandswitch.com/local-first/">https://www.inkandswitch.com/local-first/</a>
</p>
<p><a href="https://njoseph.me/mediawiki/LocalFirst">https://njoseph.me/mediawiki/LocalFirst</a>
</p>
<h2>CSRF
</h2>
<p><a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery">https://en.wikipedia.org/wiki/Cross-site_request_forgery</a></p>
<p>Cross-site request forgery, also known as one-click attack or session riding 
and abbreviated as CSRF (sometimes pronounced sea-surf[1]) or XSRF, is a type of 
malicious exploit of a website or web application where unauthorized commands 
are submitted from a user that the web application trusts.[2] There are many 
ways in which a malicious website can transmit such commands; specially-crafted 
image tags, hidden forms, and JavaScript fetch or XMLHttpRequests, for example, 
can all work without the user's interaction or even knowledge. Unlike cross-site 
scripting (XSS), which exploits the trust a user has for a particular site, CSRF 
exploits the trust that a site has in a user's browser.[3] In a CSRF attack, an 
innocent end user is tricked by an attacker into submitting a web request that 
they did not intend. This may cause actions to be performed on the website that 
can include inadvertent client or server data leakage, change of session state, 
or manipulation of an end user's account. The term "CSRF" is also used as an 
abbreviation in defences against CSRF attacks, such as techniques that use 
header data, form data, or cookies, to test for and prevent such attacks.</p>
<p><a href="https://en.wikipedia.org/wiki/Same-origin_policy">https://en.wikipedia.org/wiki/Same-origin_policy</a>&nbsp; 
In computing, the same-origin policy (SOP) is a concept in the web-app 
application security model. Under the policy, a web browser permits scripts 
contained in a first web page to access data in a second web page, but only if 
both web pages have the same origin. An origin is defined as a combination of 
URI scheme, host name, and port number. This policy prevents a malicious script 
on one page from obtaining access to sensitive data on another web page through 
that page's DOM.
</p>
<p><span>Modern browsers will permit a script to connect to a WebSocket address 
without applying the same-origin policy. However, they recognize when a 
WebSocket URI is used, and insert an&nbsp;</span>Origin:<span>&nbsp;header into the 
request that indicates the origin of the script requesting the connection. To 
ensure cross-site security, the WebSocket server must compare the header data 
against an allowlist of origins permitted to receive a reply.</span></p>
<p><a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">
https://en.wikipedia.org/wiki/Cross-origin_resource_sharing</a>
</p>
<p><a href="https://www.baeldung.com/spring-cors">https://www.baeldung.com/spring-cors</a> 
CORS with Spring
</p>
<p><a href="https://spring.io/guides/gs/rest-service-cors">https://spring.io/guides/gs/rest-service-cors</a> 
Enabling Cross Origin Requests for a RESTful Web Service
</p>

<h2>References </h2>
<p><a href="https://www.youtube.com/watch?v=-57r5AARRgY">
https://www.youtube.com/watch?v=-57r5AARRgY</a> Будущее фронтендовых приложений. 
От запросов, к движкам синхронизации / Андрей Ситник / #22 </p>

</body>

</html>
